{
  "address": "0x3c37226a993d1c41c3dB72706db390c458509e1c",
  "abi": [],
  "transactionHash": "0xee17a4bbdd84e7617ce15f3c6ba09a9ab4f6b9ad1bfdd78a320846ee73e72740",
  "receipt": {
    "to": null,
    "from": "0x18AA027f1BBf26fC9D8046491B730e9A9B6155Cd",
    "contractAddress": "0x3c37226a993d1c41c3dB72706db390c458509e1c",
    "transactionIndex": 3,
    "gasUsed": "643522",
    "logsBloom": "0x
    "blockHash": "0x11b91e98fe3991174799fcd033bfa5b84a068b4fc2ebe06a3b9a16c307cc9f15",
    "transactionHash": "0xee17a4bbdd84e7617ce15f3c6ba09a9ab4f6b9ad1bfdd78a320846ee73e72740",
    "logs": [],
    "blockNumber": 15235922,
    "cumulativeGasUsed": "770932",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "077695598a2416a9fd05a13b8c65b5a3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Opyn Team\",\"kind\":\"dev\",\"methods\":{\"addCollateral(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the collateral balance in a vault\",\"params\":{\"_amount\":\"number of _collateralAsset being added to the user's vault\",\"_collateralAsset\":\"address of the _collateralAsset being added to the user's vault\",\"_index\":\"index of _collateralAsset in the user's vault.collateralAssets array\",\"_vault\":\"vault to add collateral to\"}},\"addLong(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the long oToken balance in a vault when an oToken is deposited\",\"params\":{\"_amount\":\"number of _longOtoken the protocol is adding to the user's vault\",\"_index\":\"index of _longOtoken in the user's vault.longOtokens array\",\"_longOtoken\":\"address of the _longOtoken being added to the user's vault\",\"_vault\":\"vault to add a long position to\"}},\"addShort(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the short oToken balance in a vault when a new oToken is minted\",\"params\":{\"_amount\":\"number of _shortOtoken being minted from the user's vault\",\"_index\":\"index of _shortOtoken in the user's vault.shortOtokens array\",\"_shortOtoken\":\"address of the _shortOtoken being minted from the user's vault\",\"_vault\":\"vault to add or increase the short position in\"}},\"removeCollateral(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the collateral balance in a vault\",\"params\":{\"_amount\":\"number of _collateralAsset being removed from the user's vault\",\"_collateralAsset\":\"address of the _collateralAsset being removed from the user's vault\",\"_index\":\"index of _collateralAsset in the user's vault.collateralAssets array\",\"_vault\":\"vault to remove collateral from\"}},\"removeLong(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the long oToken balance in a vault when an oToken is withdrawn\",\"params\":{\"_amount\":\"number of _longOtoken the protocol is removing from the user's vault\",\"_index\":\"index of _longOtoken in the user's vault.longOtokens array\",\"_longOtoken\":\"address of the _longOtoken being removed from the user's vault\",\"_vault\":\"vault to remove a long position from\"}},\"removeShort(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the short oToken balance in a vault when an oToken is burned\",\"params\":{\"_amount\":\"number of _shortOtoken being reduced in the user's vault\",\"_index\":\"index of _shortOtoken in the user's vault.shortOtokens array\",\"_shortOtoken\":\"address of the _shortOtoken being reduced in the user's vault\",\"_vault\":\"vault to decrease short position in\"}}},\"title\":\"MarginVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library that provides the Controller with a Vault struct and the functions that manipulate vaults. Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/MarginVault.sol\":\"MarginVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libs/MarginVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * MarginVault Error Codes\\n * V1: invalid short otoken amount\\n * V2: invalid short otoken index\\n * V3: short otoken address mismatch\\n * V4: invalid long otoken amount\\n * V5: invalid long otoken index\\n * V6: long otoken address mismatch\\n * V7: invalid collateral amount\\n * V8: invalid collateral token index\\n * V9: collateral token address mismatch\\n */\\n\\n/**\\n * @title MarginVault\\n * @author Opyn Team\\n * @notice A library that provides the Controller with a Vault struct and the functions that manipulate vaults.\\n * Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have.\\n */\\nlibrary MarginVault {\\n    // vault is a struct of 6 arrays that describe a position a user has, a user can have multiple vaults.\\n    struct Vault {\\n        // addresses of oTokens a user has shorted (i.e. written) against this vault\\n        address[] shortOtokens;\\n        // addresses of oTokens a user has bought and deposited in this vault\\n        // user can be long oTokens without opening a vault (e.g. by buying on a DEX)\\n        // generally, long oTokens will be 'deposited' in vaults to act as collateral in order to write oTokens against (i.e. in spreads)\\n        address[] longOtokens;\\n        // addresses of other ERC-20s a user has deposited as collateral in this vault\\n        address[] collateralAssets;\\n        // quantity of oTokens minted/written for each oToken address in shortOtokens\\n        uint256[] shortAmounts;\\n        // quantity of oTokens owned and held in the vault for each oToken address in longOtokens\\n        uint256[] longAmounts;\\n        // quantity of ERC-20 deposited as collateral in the vault for each ERC-20 address in collateralAssets\\n        uint256[] collateralAmounts;\\n    }\\n\\n    /**\\n     * @dev increase the short oToken balance in a vault when a new oToken is minted\\n     * @param _vault vault to add or increase the short position in\\n     * @param _shortOtoken address of the _shortOtoken being minted from the user's vault\\n     * @param _amount number of _shortOtoken being minted from the user's vault\\n     * @param _index index of _shortOtoken in the user's vault.shortOtokens array\\n     */\\n    function addShort(\\n        Vault storage _vault,\\n        address _shortOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V1\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if (\\n            (_index == _vault.shortOtokens.length) &&\\n            (_index == _vault.shortAmounts.length)\\n        ) {\\n            _vault.shortOtokens.push(_shortOtoken);\\n            _vault.shortAmounts.push(_amount);\\n        } else {\\n            require(\\n                (_index < _vault.shortOtokens.length) &&\\n                    (_index < _vault.shortAmounts.length),\\n                \\\"V2\\\"\\n            );\\n            address existingShort = _vault.shortOtokens[_index];\\n            require(\\n                (existingShort == _shortOtoken) ||\\n                    (existingShort == address(0)),\\n                \\\"V3\\\"\\n            );\\n\\n            _vault.shortAmounts[_index] += _amount;\\n            _vault.shortOtokens[_index] = _shortOtoken;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the short oToken balance in a vault when an oToken is burned\\n     * @param _vault vault to decrease short position in\\n     * @param _shortOtoken address of the _shortOtoken being reduced in the user's vault\\n     * @param _amount number of _shortOtoken being reduced in the user's vault\\n     * @param _index index of _shortOtoken in the user's vault.shortOtokens array\\n     */\\n    function removeShort(\\n        Vault storage _vault,\\n        address _shortOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed short oToken exists in the vault at the specified index\\n        require(_index < _vault.shortOtokens.length, \\\"V2\\\");\\n        require(_vault.shortOtokens[_index] == _shortOtoken, \\\"V3\\\");\\n\\n        uint256 newShortAmount = _vault.shortAmounts[_index] - _amount;\\n\\n        if (newShortAmount == 0) {\\n            delete _vault.shortOtokens[_index];\\n        }\\n        _vault.shortAmounts[_index] = newShortAmount;\\n    }\\n\\n    /**\\n     * @dev increase the long oToken balance in a vault when an oToken is deposited\\n     * @param _vault vault to add a long position to\\n     * @param _longOtoken address of the _longOtoken being added to the user's vault\\n     * @param _amount number of _longOtoken the protocol is adding to the user's vault\\n     * @param _index index of _longOtoken in the user's vault.longOtokens array\\n     */\\n    function addLong(\\n        Vault storage _vault,\\n        address _longOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V4\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if (\\n            (_index == _vault.longOtokens.length) &&\\n            (_index == _vault.longAmounts.length)\\n        ) {\\n            _vault.longOtokens.push(_longOtoken);\\n            _vault.longAmounts.push(_amount);\\n        } else {\\n            require(\\n                (_index < _vault.longOtokens.length) &&\\n                    (_index < _vault.longAmounts.length),\\n                \\\"V5\\\"\\n            );\\n            address existingLong = _vault.longOtokens[_index];\\n            require(\\n                (existingLong == _longOtoken) || (existingLong == address(0)),\\n                \\\"V6\\\"\\n            );\\n\\n            _vault.longAmounts[_index] += _amount;\\n            _vault.longOtokens[_index] = _longOtoken;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the long oToken balance in a vault when an oToken is withdrawn\\n     * @param _vault vault to remove a long position from\\n     * @param _longOtoken address of the _longOtoken being removed from the user's vault\\n     * @param _amount number of _longOtoken the protocol is removing from the user's vault\\n     * @param _index index of _longOtoken in the user's vault.longOtokens array\\n     */\\n    function removeLong(\\n        Vault storage _vault,\\n        address _longOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed long oToken exists in the vault at the specified index\\n        require(_index < _vault.longOtokens.length, \\\"V5\\\");\\n        require(_vault.longOtokens[_index] == _longOtoken, \\\"V6\\\");\\n\\n        uint256 newLongAmount = _vault.longAmounts[_index] - _amount;\\n\\n        if (newLongAmount == 0) {\\n            delete _vault.longOtokens[_index];\\n        }\\n        _vault.longAmounts[_index] = newLongAmount;\\n    }\\n\\n    /**\\n     * @dev increase the collateral balance in a vault\\n     * @param _vault vault to add collateral to\\n     * @param _collateralAsset address of the _collateralAsset being added to the user's vault\\n     * @param _amount number of _collateralAsset being added to the user's vault\\n     * @param _index index of _collateralAsset in the user's vault.collateralAssets array\\n     */\\n    function addCollateral(\\n        Vault storage _vault,\\n        address _collateralAsset,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V7\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if (\\n            (_index == _vault.collateralAssets.length) &&\\n            (_index == _vault.collateralAmounts.length)\\n        ) {\\n            _vault.collateralAssets.push(_collateralAsset);\\n            _vault.collateralAmounts.push(_amount);\\n        } else {\\n            require(\\n                (_index < _vault.collateralAssets.length) &&\\n                    (_index < _vault.collateralAmounts.length),\\n                \\\"V8\\\"\\n            );\\n            address existingCollateral = _vault.collateralAssets[_index];\\n            require(\\n                (existingCollateral == _collateralAsset) ||\\n                    (existingCollateral == address(0)),\\n                \\\"V9\\\"\\n            );\\n\\n            _vault.collateralAmounts[_index] += _amount;\\n            _vault.collateralAssets[_index] = _collateralAsset;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the collateral balance in a vault\\n     * @param _vault vault to remove collateral from\\n     * @param _collateralAsset address of the _collateralAsset being removed from the user's vault\\n     * @param _amount number of _collateralAsset being removed from the user's vault\\n     * @param _index index of _collateralAsset in the user's vault.collateralAssets array\\n     */\\n    function removeCollateral(\\n        Vault storage _vault,\\n        address _collateralAsset,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed collateral exists in the vault at the specified index\\n        require(_index < _vault.collateralAssets.length, \\\"V8\\\");\\n        require(_vault.collateralAssets[_index] == _collateralAsset, \\\"V9\\\");\\n\\n        uint256 newCollateralAmount = _vault.collateralAmounts[_index] -\\n            _amount;\\n\\n        if (newCollateralAmount == 0) {\\n            delete _vault.collateralAssets[_index];\\n        }\\n        _vault.collateralAmounts[_index] = newCollateralAmount;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5460d8603a8111ef6aa26639c48ce8282a20a08eb9eef8357a3dc469e05c5a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234610021575b604051610aad61002f8239308160070152610aad90f35b610029600080fd5b61000a56fe6080604052307f00000000000000000000000000000000000000000000000000000000000000001415600436101561003c575b61003a600080fd5b005b60003560e01c80637b5c2835146101145780637e5d2ac0146100f8578063951dd8d3146100dc578063aadf9398146100c0578063e02ff740146100a45763ef682c1b036100325715610097575b61009161023f565b38610032565b61009f600080fd5b610089565b50156100b3575b610091610227565b6100bb600080fd5b6100ab565b50156100cf575b61009161020f565b6100d7600080fd5b6100c7565b50156100eb575b6100916101f7565b6100f3600080fd5b6100e3565b5015610107575b6100916101df565b61010f600080fd5b6100ff565b5015610123575b6100916101c2565b61012b600080fd5b61011b565b600080fd5b805b0361013057565b9050359061014b82610135565b565b6001600160a01b031690565b90565b6001600160a01b038116610137565b9050359061014b8261015c565b6080818303126101b5575b61018d828261013e565b9261015961019e846020850161016b565b936101ac816040860161013e565b9360600161013e565b6101bd600080fd5b610183565b506101da6101d1366004610178565b92919091610612565b604051005b506101da6101ee366004610178565b92919091610945565b506101da610206366004610178565b92919091610835565b506101da61021e366004610178565b92919091610744565b506101da610236366004610178565b92919091610a36565b506101da61024e366004610178565b929190916104c9565b6101596101596101599290565b0190565b1561026f57565b60405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606490fd5b156102a057565b60405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606490fd5b50634e487b7160e01b600052603260045260246000fd5b6103016001916102ef815490565b84101561030a57600052602060002090565b91020190600090565b6103126102ca565b600052602060002090565b610159916008021c6001600160a01b031690565b90610159915461031d565b61014d6101596101599290565b6101599061033c565b1561035957565b60405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606490fd5b610159916008021c81565b906101599154610383565b50634e487b7160e01b600052601160045260246000fd5b919082018092116103bd57565b61014b610399565b9160001960089290920291821b911b5b9181191691161790565b91906103f06101596103f893610257565b9083546103c5565b9055565b916001600160a01b0360089290920291821b911b6103d5565b6101599061014d906001600160a01b031682565b61015990610415565b61015990610429565b919061044c6101596103f893610432565b9083546103fc565b50634e487b7160e01b600052604160045260246000fd5b9061048e61014b92805490600160401b821015610494575b6001820181556102e1565b9061043b565b61049c610454565b610483565b906104c361014b92805490600160401b821015610494576001820181556102e1565b906103df565b926000906104e06104d983610257565b8511610268565b818501916104ef610159845490565b8214806105e3575b1561051c57505061014b936102646105179361051260039490565b61046b565b6104a1565b83946105a961059784600361014b9a61059161055f9761048e9b61057761056a610564889e9d8e61054e610159825490565b8210806105c9575b61055f90610299565b6102e1565b90610331565b916001600160a01b031690565b6001600160a01b038216149182156105af575b5050610352565b016102e1565b9190926105a4838561038e565b6103b0565b916103df565b6105c191925061014d61056a91610349565b14388061058a565b5061055f6105da6101598c8c015490565b83109050610556565b506105f2610159600388015490565b82146104f7565b919082039182116103bd57565b61014b9160009161043b565b919261014b936106586104c39361065261056a6106456105648760008b0161055f61063e610159835490565b8310610299565b926001600160a01b031690565b14610352565b610678600385019161067361066d85856102e1565b9061038e565b6105f9565b936000908361068683610257565b8714610695575b5050506102e1565b6106a9926106a392016102e1565b90610606565b38808361068d565b156106b857565b60405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606490fd5b156106e957565b60405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606490fd5b1561071a57565b60405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606490fd5b9260009061075b61075483610257565b85116106b1565b600185019161076b610159845490565b82148061081f575b1561078e57505061014b936102646105179361051260049490565b83946105a961059784600461014b9a61059161055f9761048e9b6107d161056a610564889e9d8e6107c0610159825490565b821080610805575b61055f906106e2565b6001600160a01b038216149182156107eb575b5050610713565b6107fd91925061014d61056a91610349565b1438806107e4565b5061055f6108166101598c8c015490565b831090506107c8565b5061082e610159600488015490565b8214610773565b92809281610885600461014b976108766104c39761087061056a610645610564600187019d8e61055f610869610159835490565b83106106e2565b14610713565b019261067361066d84866102e1565b946108906000610257565b861461089e575b50506102e1565b6108ab916106a3916102e1565b8138610897565b156108b957565b60405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606490fd5b156108ea57565b60405162461bcd60e51b81526020600482015260026024820152610ac760f31b6044820152606490fd5b1561091b57565b60405162461bcd60e51b8152602060048201526002602482015261563960f01b6044820152606490fd5b9260009061095c61095583610257565b85116108b2565b600285019161096c610159845490565b821480610a20575b1561098f57505061014b936102646105179361051260059490565b83946105a961059784600561014b9a61059161055f9761048e9b6109d261056a610564889e9d8e6109c1610159825490565b821080610a06575b61055f906108e3565b6001600160a01b038216149182156109ec575b5050610914565b6109fe91925061014d61056a91610349565b1438806109e5565b5061055f610a176101598c8c015490565b831090506109c9565b50610a2f610159600588015490565b8214610974565b92809281610885600561014b976108766104c397610a7161056a610645610564600287019d8e61055f610a6a610159835490565b83106108e3565b1461091456fea2646970667358221220af0111bbcc4091b88c2697c10b2e8286d1cfa40a73ef555a9da37ffe22d119ff64736f6c63430008110033",
  "deployedBytecode": "0x6080604052307f00000000000000000000000000000000000000000000000000000000000000001415600436101561003c575b61003a600080fd5b005b60003560e01c80637b5c2835146101145780637e5d2ac0146100f8578063951dd8d3146100dc578063aadf9398146100c0578063e02ff740146100a45763ef682c1b036100325715610097575b61009161023f565b38610032565b61009f600080fd5b610089565b50156100b3575b610091610227565b6100bb600080fd5b6100ab565b50156100cf575b61009161020f565b6100d7600080fd5b6100c7565b50156100eb575b6100916101f7565b6100f3600080fd5b6100e3565b5015610107575b6100916101df565b61010f600080fd5b6100ff565b5015610123575b6100916101c2565b61012b600080fd5b61011b565b600080fd5b805b0361013057565b9050359061014b82610135565b565b6001600160a01b031690565b90565b6001600160a01b038116610137565b9050359061014b8261015c565b6080818303126101b5575b61018d828261013e565b9261015961019e846020850161016b565b936101ac816040860161013e565b9360600161013e565b6101bd600080fd5b610183565b506101da6101d1366004610178565b92919091610612565b604051005b506101da6101ee366004610178565b92919091610945565b506101da610206366004610178565b92919091610835565b506101da61021e366004610178565b92919091610744565b506101da610236366004610178565b92919091610a36565b506101da61024e366004610178565b929190916104c9565b6101596101596101599290565b0190565b1561026f57565b60405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606490fd5b156102a057565b60405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606490fd5b50634e487b7160e01b600052603260045260246000fd5b6103016001916102ef815490565b84101561030a57600052602060002090565b91020190600090565b6103126102ca565b600052602060002090565b610159916008021c6001600160a01b031690565b90610159915461031d565b61014d6101596101599290565b6101599061033c565b1561035957565b60405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606490fd5b610159916008021c81565b906101599154610383565b50634e487b7160e01b600052601160045260246000fd5b919082018092116103bd57565b61014b610399565b9160001960089290920291821b911b5b9181191691161790565b91906103f06101596103f893610257565b9083546103c5565b9055565b916001600160a01b0360089290920291821b911b6103d5565b6101599061014d906001600160a01b031682565b61015990610415565b61015990610429565b919061044c6101596103f893610432565b9083546103fc565b50634e487b7160e01b600052604160045260246000fd5b9061048e61014b92805490600160401b821015610494575b6001820181556102e1565b9061043b565b61049c610454565b610483565b906104c361014b92805490600160401b821015610494576001820181556102e1565b906103df565b926000906104e06104d983610257565b8511610268565b818501916104ef610159845490565b8214806105e3575b1561051c57505061014b936102646105179361051260039490565b61046b565b6104a1565b83946105a961059784600361014b9a61059161055f9761048e9b61057761056a610564889e9d8e61054e610159825490565b8210806105c9575b61055f90610299565b6102e1565b90610331565b916001600160a01b031690565b6001600160a01b038216149182156105af575b5050610352565b016102e1565b9190926105a4838561038e565b6103b0565b916103df565b6105c191925061014d61056a91610349565b14388061058a565b5061055f6105da6101598c8c015490565b83109050610556565b506105f2610159600388015490565b82146104f7565b919082039182116103bd57565b61014b9160009161043b565b919261014b936106586104c39361065261056a6106456105648760008b0161055f61063e610159835490565b8310610299565b926001600160a01b031690565b14610352565b610678600385019161067361066d85856102e1565b9061038e565b6105f9565b936000908361068683610257565b8714610695575b5050506102e1565b6106a9926106a392016102e1565b90610606565b38808361068d565b156106b857565b60405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606490fd5b156106e957565b60405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606490fd5b1561071a57565b60405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606490fd5b9260009061075b61075483610257565b85116106b1565b600185019161076b610159845490565b82148061081f575b1561078e57505061014b936102646105179361051260049490565b83946105a961059784600461014b9a61059161055f9761048e9b6107d161056a610564889e9d8e6107c0610159825490565b821080610805575b61055f906106e2565b6001600160a01b038216149182156107eb575b5050610713565b6107fd91925061014d61056a91610349565b1438806107e4565b5061055f6108166101598c8c015490565b831090506107c8565b5061082e610159600488015490565b8214610773565b92809281610885600461014b976108766104c39761087061056a610645610564600187019d8e61055f610869610159835490565b83106106e2565b14610713565b019261067361066d84866102e1565b946108906000610257565b861461089e575b50506102e1565b6108ab916106a3916102e1565b8138610897565b156108b957565b60405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606490fd5b156108ea57565b60405162461bcd60e51b81526020600482015260026024820152610ac760f31b6044820152606490fd5b1561091b57565b60405162461bcd60e51b8152602060048201526002602482015261563960f01b6044820152606490fd5b9260009061095c61095583610257565b85116108b2565b600285019161096c610159845490565b821480610a20575b1561098f57505061014b936102646105179361051260059490565b83946105a961059784600561014b9a61059161055f9761048e9b6109d261056a610564889e9d8e6109c1610159825490565b821080610a06575b61055f906108e3565b6001600160a01b038216149182156109ec575b5050610914565b6109fe91925061014d61056a91610349565b1438806109e5565b5061055f610a176101598c8c015490565b831090506109c9565b50610a2f610159600588015490565b8214610974565b92809281610885600561014b976108766104c397610a7161056a610645610564600287019d8e61055f610a6a610159835490565b83106108e3565b1461091456fea2646970667358221220af0111bbcc4091b88c2697c10b2e8286d1cfa40a73ef555a9da37ffe22d119ff64736f6c63430008110033",
  "devdoc": {
    "author": "Opyn Team",
    "kind": "dev",
    "methods": {
      "addCollateral(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the collateral balance in a vault",
        "params": {
          "_amount": "number of _collateralAsset being added to the user's vault",
          "_collateralAsset": "address of the _collateralAsset being added to the user's vault",
          "_index": "index of _collateralAsset in the user's vault.collateralAssets array",
          "_vault": "vault to add collateral to"
        }
      },
      "addLong(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the long oToken balance in a vault when an oToken is deposited",
        "params": {
          "_amount": "number of _longOtoken the protocol is adding to the user's vault",
          "_index": "index of _longOtoken in the user's vault.longOtokens array",
          "_longOtoken": "address of the _longOtoken being added to the user's vault",
          "_vault": "vault to add a long position to"
        }
      },
      "addShort(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the short oToken balance in a vault when a new oToken is minted",
        "params": {
          "_amount": "number of _shortOtoken being minted from the user's vault",
          "_index": "index of _shortOtoken in the user's vault.shortOtokens array",
          "_shortOtoken": "address of the _shortOtoken being minted from the user's vault",
          "_vault": "vault to add or increase the short position in"
        }
      },
      "removeCollateral(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the collateral balance in a vault",
        "params": {
          "_amount": "number of _collateralAsset being removed from the user's vault",
          "_collateralAsset": "address of the _collateralAsset being removed from the user's vault",
          "_index": "index of _collateralAsset in the user's vault.collateralAssets array",
          "_vault": "vault to remove collateral from"
        }
      },
      "removeLong(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the long oToken balance in a vault when an oToken is withdrawn",
        "params": {
          "_amount": "number of _longOtoken the protocol is removing from the user's vault",
          "_index": "index of _longOtoken in the user's vault.longOtokens array",
          "_longOtoken": "address of the _longOtoken being removed from the user's vault",
          "_vault": "vault to remove a long position from"
        }
      },
      "removeShort(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the short oToken balance in a vault when an oToken is burned",
        "params": {
          "_amount": "number of _shortOtoken being reduced in the user's vault",
          "_index": "index of _shortOtoken in the user's vault.shortOtokens array",
          "_shortOtoken": "address of the _shortOtoken being reduced in the user's vault",
          "_vault": "vault to decrease short position in"
        }
      }
    },
    "title": "MarginVault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A library that provides the Controller with a Vault struct and the functions that manipulate vaults. Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
